txt <- system.file("texts", "txt", package = "tm")
require(tm)
ovid <- VCorpus(DirSource(txt, encoding = "UTF-8"),readerControl = list(language = "lat"))
print(ovid)
DirSource(txt, encoding = "UTF-8")
ovid <- VCorpus(DirSource(txt, encoding = "UTF-8"),
+ readerControl = list(language = "lat"))
ovid <- VCorpus(DirSource(txt, encoding = "UTF-8"),readerControl = list(language = "lat"))
print(ovid)
questions <- VCorpus(dataPath,readerControl = list(language = "eng"))
dataPath <- "C:\\Users\\JUJulien\\Desktop\\KAGGLE\\Competitions\\Rob-The-Robot\\data\\"
questions <- VCorpus(dataPath,readerControl = list(language = "eng"))
questions <- VCorpus(DirSource(dataPath, encoding = "UTF-8"),readerControl = list(language = "lat"))
print(questions)
print(questions)
inspect(questions)
inspect(questions[1:2])
inspect(questions[1])
inspect(questions[1][1])
inspect(questions)
questions <- tm_map(questions, content_transformer(tolower))
print(questions)
questions <- VCorpus(DirSource(dataPath, encoding = "UTF-8"),readerControl = list(language = "lat"))
questions <- tm_map(questions, content_transformer(tolower))
questions <- tm_map(questions, removeWords, stopwords("english"))
print(questions)
summary(questions)
head(questions)
summary(questions)
data(reuters)
library(kernlab)
data(reuters)
sk <- stringdot(type="spectrum", length=2, normalized=TRUE)
kpc <- kpca(x,kernel=sk,scale=c())
y <- rlabels
x <- reuters
sk <- stringdot(type="spectrum", length=2, normalized=TRUE)
kpc <- kpca(x,kernel=sk,scale=c())
plot(rotated(kpc),col=ifelse(y==levels(y)[1],1,2))
head(reuters)
sgk <- gapweightkernel(length=2,lambda=0.75,normalized=TRUE,use_characters=TRUE)
kpc <- kpca(x,kernel=sgk,scale=c())
plot(rotated(kpc),col=ifelse(y==levels(y)[1],1,2))
dataPath <- "C:\\Users\\JUJulien\\Desktop\\KAGGLE\\Competitions\\Rob-The-Robot\\data\\"
library(stringkernels)
install.packages("stringkernels")
library(stringkernels)
library(stringkernels)
x <- read.txt(".\\clean.csv")
x <- read.text(".\\clean.csv")
x <- read.table(".\\clean.csv")
head(reuters)
x <- Corpus(DirSource(".//clean.csv"), readerControl = list(language="eng"))
require(tm)
x <- Corpus(DirSource(".//clean.csv"), readerControl = list(language="eng"))
x <-scan("./clean.csv", what = "character")
head(x)
x <-scan("./clean.csv", what = "string")
head(x)
x
help(sca)
help(scan)
x <-scan("./clean.csv", what = "list")
x
